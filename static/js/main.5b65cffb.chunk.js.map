{"version":3,"sources":["components/scripts/Botao.jsx","components/scripts/Tarefa.jsx","components/scripts/Controller.jsx","serviceWorker.js","index.js"],"names":["Botao","type","id","alt","this","props","name","src","imageURL","onClick","handleClick","style","cor","React","Component","Tarefa","state","isChecked","isDeleted","exclude","setState","setTimeout","text","checkClick","deleteClick","Controller","tarefas","inputCapture","concat","confereTarefas","map","value","index","key","onInput","event","target","addTarefa","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uSAmBeA,G,6KAdF,IAAD,OACJ,OACI,2BACIC,KAAK,QACLC,GAAG,QACHC,IAAMC,KAAKC,MAAMC,KACjBC,IAAMH,KAAKC,MAAMG,SACjBC,QAAW,kBAAM,EAAKJ,MAAMK,eAC5BC,MAAS,CAAE,gBAAmBP,KAAKC,MAAMO,W,GAVrCC,IAAMC,YC0DXC,G,wDAxDX,WAAYV,GAAO,IAAD,8BACd,cAAMA,IACDW,MAAQ,CACTC,WAAW,EACXC,WAAU,EACVC,SAAS,GALC,E,yDAUXf,KAAKY,MAAMC,UACVb,KAAKgB,SAAS,CACVH,WAAU,IAGdb,KAAKgB,SAAS,CACVH,WAAU,EACVC,WAAU,M,oCAIR,IAAD,OACNd,KAAKY,MAAME,UACVd,KAAKgB,SAAS,CACVF,WAAU,IAGdd,KAAKgB,SAAS,CACVF,WAAU,EACVD,WAAU,IAElBI,YAAW,kBAAM,EAAKD,SAAS,CAACD,SAAS,MAAQ,O,+BAG5C,IAAD,OACJ,OAAGf,KAAKY,MAAMG,QAAgB,KAE1B,yBAAKjB,GAAG,UACJ,4BAAKE,KAAKC,MAAMiB,MAChB,kBAAC,EAAD,CACIhB,KAAK,mBACLE,SAAS,sEACTE,YAAc,kBAAM,EAAKa,cACzBX,IAAOR,KAAKY,MAAMC,UAAY,UAAU,OAE5C,kBAAC,EAAD,CACIX,KAAK,iBACLE,SAAS,8FACTE,YAAc,kBAAM,EAAKc,eACzBZ,IAAOR,KAAKY,MAAME,UAAY,UAAU,Y,GAlDvCL,IAAMC,YCuDZW,G,wDArDX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IACDW,MAAQ,CACTU,QAAS,CAAC,kBAAC,EAAD,CAAQJ,KAAM,oBACxBK,aAAc,IAJH,E,wDAUgB,KAA5BvB,KAAKY,MAAMW,cACVvB,KAAKgB,SAAS,CACVM,QAAStB,KAAKY,MAAMU,QAAQE,OAAO,kBAAC,EAAD,CAAQN,KAAOlB,KAAKY,MAAMW,oB,yEAQhE,IAAD,OACJvB,KAAKyB,iBAEL,IAAMH,EAAUtB,KAAKY,MAAMU,QAAQI,KAAI,SAACC,EAAOC,GAC3C,OAAOD,EACH,yBAAKE,IAAKD,GACL,EAAKhB,MAAMU,QAAQM,IAEzB,MAIP,OACI,yBAAK9B,GAAG,WACJ,kDACA,yBAAKA,GAAG,WACHwB,GAEL,yBAAKxB,GAAG,QACJ,2BAAOD,KAAK,OAAOiC,QAAS,SAACC,GACzB,EAAKf,SAAS,CAACO,aAAcQ,EAAMC,OAAOL,WAE9C,kBAAC,EAAD,CACIzB,KAAK,mBACLE,SAAS,iHACTE,YAAc,kBAAM,EAAK2B,qB,GA9CxBxB,IAAMC,YCOXwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,yBAAK3C,GAAG,qBACN,oDACA,kBAAC,EAAD,QAGN4C,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5b65cffb.chunk.js","sourcesContent":["import React from 'react'\nimport '../css/Botao.css'\n\nclass Botao extends React.Component {\n\n    render(){\n        return (\n            <input\n                type=\"image\"\n                id=\"botao\"\n                alt= {this.props.name}\n                src= {this.props.imageURL}\n                onClick= { () => this.props.handleClick() }\n                style= { { \"backgroundColor\": this.props.cor } }\n            />\n        )\n    }\n}\n\nexport default Botao\n","import React from 'react'\nimport Botao from './Botao'\nimport '../css/Tarefa.css'\n\nclass Tarefa extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isChecked: false,\n            isDeleted:false,\n            exclude: false\n        }\n    }\n\n    checkClick(){\n        if(this.state.isChecked)\n            this.setState({\n                isChecked:false\n            })\n        else\n            this.setState({\n                isChecked:true,\n                isDeleted:false\n            })\n    }\n\n    deleteClick(){\n        if(this.state.isDeleted)\n            this.setState({\n                isDeleted:false\n            })\n        else\n            this.setState({\n                isDeleted:true,\n                isChecked:false\n            })\n        setTimeout(() => this.setState({exclude: true}), 500)\n    }\n\n    render(){\n        if(this.state.exclude) return null\n        return (\n            <div id=\"tarefa\">\n                <h3>{this.props.text}</h3>\n                <Botao\n                    name=\"Tarefa realizada\"\n                    imageURL=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/Black_check.svg\"\n                    handleClick= {() => this.checkClick()}\n                    cor = {this.state.isChecked ? \"#02e619\":null}\n                />\n                <Botao\n                    name=\"Deletar tarefa\"\n                    imageURL=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Black_x.svg/896px-Black_x.svg.png\"\n                    handleClick= {() => this.deleteClick()}\n                    cor = {this.state.isDeleted ? \"#e6024a\":null}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Tarefa\n","import Tarefa from './Tarefa'\nimport React from 'react'\nimport Botao from './Botao'\nimport '../css/Controller.css'\n\nclass Controller extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tarefas: [<Tarefa text= \"Arrumar a casa\"/>],\n            inputCapture: \"\"\n        }\n\n    }\n\n    addTarefa() {\n        if(this.state.inputCapture !== \"\"){\n            this.setState({\n                tarefas: this.state.tarefas.concat(<Tarefa text= {this.state.inputCapture}/> )\n            })\n        }\n    }\n\n    confereTarefas() {\n    }\n\n    render(){\n        this.confereTarefas()\n\n        const tarefas = this.state.tarefas.map((value, index) =>{\n            return value ? (\n                <div key={index}>\n                    {this.state.tarefas[index]}\n                </div>\n            ): \"\"\n            }\n        )\n\n        return (\n            <div id=\"content\">\n                <h2>Tarefas para fazer</h2>\n                <div id=\"tarefas\">\n                    {tarefas}\n                </div>\n                <div id=\"form\">\n                    <input type=\"text\" onInput={(event) => {\n                        this.setState({inputCapture: event.target.value})\n                    }}/>\n                    <Botao\n                        name=\"Adicionar Tarefa\"\n                        imageURL=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/OOjs_UI_icon_add.svg/1200px-OOjs_UI_icon_add.svg.png\"\n                        handleClick= {() => this.addTarefa()}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Controller\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Controller from './components/scripts/Controller';\nimport * as serviceWorker from './serviceWorker';\nimport './components/css/Generic.css'\n\nReactDOM.render(\n  <React.StrictMode>\n      <div id=\"genericBackground\">\n        <h1>List of things to do</h1>\n        <Controller/>\n      </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}